/*
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.

Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 
*/


#include<iostream>
using namespace std;

int partion(int i[],int s,int e)
{
    int x=i[s];
    int count=0;
    for(int g=s+1;g<=e;g++)
    {
        if(i[g]<=x)
        {
            count++;
        }
    }
    int temp=i[s];
    i[s]=i[s+count];
    i[s+count]=temp;
    int j=s;
    int k=e;
    while(j!=(s+count) && k!=(s+count))
    {
        if(i[j]<=x)
        {
            j++;
        }
        else if(i[k]>x)
        {
            k--;
        }
        else
        {
            int t=i[j];
            i[j]=i[k];
            i[k]=t;
        }
    }
    return (s+count);
}

void quicksort(int i[],int s,int e)
{
    if(s>=e)
    {
        return;
    }
    int c=partion(i,s,e);
    quicksort(i,s,c-1);
    quicksort(i,c+1,e);
}

void quickSort(int input[], int size) {
  
    int s=0;
    quicksort(input,s,size-1);

}

int main(){
    int n;
    cin >> n;
    int *input = new int[n];
    for(int i = 0; i < n; i++) {
        cin >> input[i];
    }
    quickSort(input, n);
    for(int i = 0; i < n; i++) {
        cout << input[i] << " ";
    }
    delete [] input;
}
