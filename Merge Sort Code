/*
Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 
*/

#include <iostream>
using namespace std;

void merge(int i[],int s,int mid,int e)
{
    int l=s;
    int j=mid;
    int temp[e-s+1];
    int k=0;
    while(l<mid && j<=e)
    {
        if(i[l]<=i[j])
        {
            temp[k++]=i[l++];
        }
        if(i[j]<i[l])
        {
            temp[k++]=i[j++];
        }
    }
    while(l<mid)
   {
          temp[k++]=i[l++];
    }      
   while(j<=e)
    {
        temp[k++]=i[j++];
    } 
  for(int f=0,h=s;h<=e;f++,h++)
    {
        i[h]=temp[f];
    }               
}

void mergesort(int i[],int s,int e)
{
    if(s>=e)
    {
        return ;
    }
    int mid=s+(e-s)/2;
    mergesort(i,s,mid);
    mergesort(i,mid+1,e);
    merge(i,s,mid+1,e);
}

void mergeSort(int input[], int size){
        int s=0;
       mergesort(input,s,size-1);
}

int main() {
  int length;
  cin >> length;
  int* input = new int[length];
  for(int i=0; i < length; i++)
    cin >> input[i];
  mergeSort(input, length);
  for(int i = 0; i < length; i++) {
    cout << input[i] << " ";
  }
}
